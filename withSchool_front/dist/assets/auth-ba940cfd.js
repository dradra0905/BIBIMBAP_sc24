const n="http://223.130.134.181:8080",u=async(r,o)=>{try{const e={id:r,password:o},t=await fetch(`${n}/basic/sign-in`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(t.ok){const s=await t.json();return console.log("Login successful:",s),s}else{const s=await t.text();throw console.error("Login failed:",s),new Error(s)}}catch(e){console.error("Error during login:",e)}},y=async(r,o,e,t)=>{try{const s={schoolId:r,userName:o,birthDate:e,userCode:t},i=await fetch(`${n}/basic/pre-sign-up`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)}),c=await i.json();if(i.status===200)return console.log("Certify Success:",c),c;console.error("Certify failed:",c.message)}catch(s){console.error("Error during certify:",s)}},p=async(r,o,e,t,s,i,c,d,g,f)=>{try{const l={id:r,email:o,password:e,name:t,sex:s,phoneNumber:i,address:c,birthDate:d,accountType:g,userCode:f},h=await fetch(`${n}/basic/sign-up`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(l)});if(h.ok){const a=await h.json();return console.log("Register successful:",a),a}else{const a=await h.text();throw alert("회원가입에 실패했습니다: "+a),console.error("Register failed:",a),new Error(a)}}catch(l){console.error("Register during login:",l)}},w=async r=>{try{const o=await fetch(`${n}/basic/is-duplicated?id=${r}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(o.ok){const e=await o.json();return console.log("Check Duplicate successful:",e),e}else{const e=await o.text();throw console.error("Check Duplicate failed:",e),new Error(e)}}catch(o){console.error("Check Duplicate during Checking:",o)}},C=async r=>{try{const o=await fetch(`${n}/schools/mySchool`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}});if(o.ok){const e=await o.json();return console.log("School ID fetched successfully:",e),e}else{const e=await o.text();throw console.error("Failed to fetch school ID:",e),new Error(e)}}catch(o){console.error("Error during fetching school ID:",o)}},E=async r=>{try{const o=await fetch(`${n}/classes/myClass`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}});if(o.ok){const e=await o.json();return console.log("Class ID fetched successfully:",e),e}else{const e=await o.text();throw console.error("Failed to fetch Class ID:",e),new Error(e)}}catch(o){console.error("Error during fetching Class ID:",o)}},I=async r=>{try{const o=await fetch(`${n}/users/id/${r}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`}});if(o.ok){const e=await o.json();return console.log("UserInfo fetched successfully:",e),e}else{const e=await o.text();throw console.error("Failed to fetch UserInfo:",e),new Error(e)}}catch(o){console.error("Error during fetching UserInfo:",o)}};export{w as D,E as a,I as b,y as c,C as g,u as l,p as r};
